name: BuildImage

on:
  push:
    tags:
      - 'c*.*.*'
  workflow_dispatch:
    inputs:
      cmake-version:
        description: 'CMake version'
        required: true
        default: '3.30.2'

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  build_multi_arch_images:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      # Extract version for docker tag
      - name: Get version
        run: |
          if [ -z "${{ github.event.inputs.cmake-version }}" ]; then
            echo "CMAKE_VERSION=${GITHUB_REF##*/}" | sed s/c// >> $GITHUB_ENV
          else
            echo "CMAKE_VERSION=${{ github.event.inputs.cmake-version }}" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Multi Arch buildimage
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: ./Dockerfile
          build-args: CMAKE_VERSION=${{ env.CMAKE_VERSION }}
          push: true
          provenance: true
          tags: |
            atsigncompany/cbuildimage:latest
            atsigncompany/cbuildimage:GHA_${{ github.run_number }}
            atsigncompany/cbuildimage:CMake-${{ env.CMAKE_VERSION }}
          platforms: |
            linux/amd64
            linux/arm64/v8

  slsa_provenance:
    needs: [build_multi_arch_images]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: "atsigncompany/cbuildimage"
      digest: ${{ needs.build_multi_arch_images.outputs.digest }}
    secrets:
      registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}
